version: '3.9'

volumes:
  local_postgres_data: {}

services:
  # rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672"
      - "15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
  
  users_pg:
    image: postgres:11.6
    container_name: users_pg
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    volumes:
      - ./local_postgres_data/users:/var/lib/postgresql/data
    ports:
      - 5444:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 20

  # admin db
  admin_pg:
    image: postgres:11.6
    container_name: admin_pg
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    volumes:
      - ./local_postgres_data/admin:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
#
#  # clients db
  client_pg:
    image: postgres:11.6
    container_name: clients_pg
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    volumes:
      - ./local_postgres_data/clients:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 20

  # couriers db
  courier_pg:
    image: postgres:11.6
    container_name: couriers_pg
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    volumes:
      - ./local_postgres_data/couriers:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 20


  ############################################################################
  # discovery service
  eureka-server:
    image: slipchansky/parceldelivery-discovery-service:latest
    container_name: eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-server:3333"]
      interval: 30s
      timeout: 5s
      retries: 20

    environment:
      port: 3333
    ports:
      - 3333

  ############################################################################
  # services

  user-service:
    image: slipchansky/parceldelivery-user-service:latest
    links:
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 20
    depends_on:
       users_pg:
          condition: service_healthy
       eureka-server:
          condition: service_healthy
       rabbitmq:
          condition: service_healthy
    environment:
      amqp_host: rabbitmq
      amqp_port: 5672
      discovery_endpoint: 'http://eureka-server:3333/eureka'
      dbhost: users_pg
      dbport: 5432
      dbname: database
      dbuser: dbuser
      dbpassword: password
    ports:
      - 8000

  admin-service:
    image: slipchansky/parceldelivery-admin-service:latest
    links:
      - eureka-server
    depends_on:
       admin_pg:
          condition: service_healthy
       eureka-server:
          condition: service_healthy
       rabbitmq:
          condition: service_healthy
    environment:
      amqp_host: rabbitmq
      amqp_port: 5672
      discovery_endpoint: 'http://eureka-server:3333/eureka'
      dbhost: admin_pg
      dbport: 5432
      dbname: database
      dbuser: dbuser
      dbpassword: password
    ports:
      - 8002

  client-service:
    image: slipchansky/parceldelivery-client-service:latest
    links:
      - eureka-server
    depends_on:
       client_pg:
          condition: service_healthy
       eureka-server:
          condition: service_healthy
       rabbitmq:
          condition: service_healthy
    environment:
      amqp_host: rabbitmq
      amqp_port: 5672
      discovery_endpoint: 'http://eureka-server:3333/eureka'
      dbhost: client_pg
      dbport: 5432
      dbname: database
      dbuser: dbuser
      dbpassword: password
    ports:
      - 8001

  courier-service:
    image: slipchansky/parceldelivery-courier-service:latest
    links:
      - eureka-server
    depends_on:
       courier_pg:
          condition: service_healthy
       eureka-server:
          condition: service_healthy
       rabbitmq:
          condition: service_healthy
    environment:
      amqp_host: rabbitmq
      amqp_port: 5672
      discovery_endpoint: 'http://eureka-server:3333/eureka'
      dbhost: courier_pg
      dbport: 5432
      dbname: database
      dbuser: dbuser
      dbpassword: password
    ports:
      - 8003

  public-api:
    image: slipchansky/parceldelivery-publicapi:latest
    links:
      - eureka-server
    environment:
      discovery_endpoint: 'http://eureka-server:3333/eureka'
    ports:
      - 8080
    labels:
      - "traefik.enable=true"
      -  traefik.port=8080
      - "traefik.http.routers.public-api.rule=Host(`localhost`)"
      - "traefik.http.routers.public-api.entrypoints=web"


  traefik:
     image: "traefik:latest"
     container_name: "traefik"
     command:
      - "--log.level=INFO"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
     ports:
      - "8080:8080"
     volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
